const a=location.pathname.split("/").slice(0,-1).join("/"),o=[a+"/_app/immutable/entry/app.BHg2-Teo.js",a+"/_app/immutable/nodes/0.CMuSu7NV.js",a+"/_app/immutable/nodes/1.dhfi6n7Q.js",a+"/_app/immutable/nodes/2.CrKCcChT.js",a+"/_app/immutable/chunks/0-VdqPqZ.js",a+"/_app/immutable/chunks/BnAI2Dh6.js",a+"/_app/immutable/chunks/C396GFe7.js",a+"/_app/immutable/chunks/DVHzuQX-.js",a+"/_app/immutable/chunks/DogSxgQw.js",a+"/_app/immutable/chunks/DxE7Uhba.js",a+"/_app/immutable/chunks/lhKEA-g8.js",a+"/_app/immutable/chunks/x6Ld8bo-.js",a+"/_app/immutable/entry/start.C7bwS3gu.js"],p=[a+"/logo-512.png",a+"/favicon.png",a+"/manifest.json",a+"/logo-192.png",a+"/robots.txt",a+"/favicon.svg"],l="1737565120108",i=`cache-${l}`,u=[...o,...p];self.addEventListener("install",e=>{async function s(){await(await caches.open(i)).addAll(u)}e.waitUntil(s())});self.addEventListener("activate",e=>{async function s(){for(const t of await caches.keys())t!==i&&await caches.delete(t)}e.waitUntil(s())});self.addEventListener("fetch",e=>{if(e.request.method!=="GET")return;async function s(){const t=new URL(e.request.url),n=await caches.open(i);if(u.includes(t.pathname))return n.match(e.request);try{const c=await fetch(e.request);return c.status===200&&n.put(e.request,c.clone()),c}catch{return n.match(e.request)}}e.respondWith(s())});
